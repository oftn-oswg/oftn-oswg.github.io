<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr" lang="en-US">
<head>
<meta charset="utf-8"/>
<title>ΩF:∅ Member Initiation</title>
<meta name="viewport" content="width=device-width"/>
<style type="text/css">
@import url(//fonts.googleapis.com/css?family=Vollkorn:400italic,400|Raleway);

/* OFTN Aller is a modified version of Aller with an empty set and a raised colon.
   Aller is copyright Dalton Maag Ltd, http://www.daltonmaag.com/ */
@font-face {
	font-family: "OFTN Aller";
	src: url("../fonts/OFTN-Aller-Bold.woff") format("woff"),
		url("../fonts/OFTN-Aller-Bold.ttf") format("truetype");
	font-weight: bold;
	font-style: normal;
}
@font-face {
	font-family: "OFTN Aller";
	src: url("../fonts/OFTN-Aller.woff") format("woff"),
	     url("../fonts/OFTN-Aller.ttf") format("truetype");
	font-weight: normal;
	font-style: normal;
}

.oftn, .oftn-strong {
	font-family: "OFTN Aller", Helvetica Neue, Helvetica, Arial, sans-serif;
	font-weight: normal;
	text-rendering: optimizeSpeed;
}
.oftn-strong { font-weight: bold; }


body {
	font: 11pt/2 Raleway, Helvetica Neue, Helvetica, Arial, sans-serif;
	text-rendering: optimizeLegibility;
	padding: 2em;
}

#container {
	width: 960px;
	margin: 0 auto;
}

a { color: red; }

h1, h2 {
	font-weight: normal;
	margin: 0;
}

.say {
	font-family: Monaco, Courier New, monospace;
	color: black;
	margin: 3em 0;
	margin-left: 100px;
	line-height: 1.45;
	position: relative;
	color: #383838;
}

.say:before {
	display: block;
	content: "\201C";
	font-size: 160px;
	font-style: italic;
	position: absolute;
	left: -100px;
	top: -40px;
	color: #2a2a2a;
	font-family: Georgia, serif;
}

.flow {
	color: red;
padding: 0.25em; background-color: #f3f3f3;
}
.input textarea {
	width: 100%;
	height: 6em;
	font-family: Monaco, Courier New, monospace;
	font-size: inherit;
	background-color: #d5d5d5;
	border: none;
	line-height: inherit;
	outline: none;
}
.error {
	background-color: #fdd;
	border: 1px solid #a00;
	margin: 1em 0;
	padding: 1em;
}
.do {
	margin: 0 0 3em 0;
}

.steps {
	padding: 2em;
}
.steps p, .steps pre {
	margin: 0;
}
</style>
</head>
<body>

	<div id="container">
		<h1><span class="oftn-strong">ΩF:∅</span> Member Initiation</h1>

		<div class="say">
			<p>Hello, I am now going to go through the steps to add you as a member of <span class="oftn-strong">ΩF:∅</span>. It should take 5 minutes of your time.</p>
			<p>I just need this information from you in JSON --- {"name": "full professional name", "nick": "preferred internal nick", "irc": "your current irc nick", "github": "username", "url": "website/blog" || false, "email": "address"}</p>
			<p>Thanks. Please take the time to add #oftn to your autojoin list if you haven't done so. Also, please join our Google+ community for news, events, and general talk at https://plus.google.com/communities/112859235384765702467</p>
			<p>The first step is to add you to the <span class="oftn-strong">ΩF:∅</span> Github organization. Next I will add you to the shared &#8220;<span class="oftn"><span class="oftn-strong">ΩF:∅</span> Working Group</span>&#8221; Google Drive folder. Lastly, I will add you to the website and request an IRC cloak for your Freenode account.</p>
			
		</div>

		<div class="input">
			<textarea id="input">{"name": "Devin Samarin", "nick": "dsamarin", "irc": "dsamarin", "github": "dsamarin", "url": false, "email": "eboyjr14@gmail.com"}</textarea>
			<div id="error" class="error" style="display: none;"></div>
		</div>

		<div class="steps">

		<h2>GitHub</h2>

		<ol class="do">
			<li>Go to <a href="https://github.com/organizations/oftn/teams/30032">https://github.com/organizations/oftn/teams/30032</a> (The ΩF:∅ members team on Github). Scroll to the bottom and add <span class="flow data-github">their GitHub username</span>.</li>
			<li>Go to <a href="https://github.com/oftn?tab=members">https://github.com/oftn?tab=members</a>, scroll down to their username, and click "Publicize membership".</li>
		</ol>

		<h2>Drive</h2>

		<ol class="do">
			<li>Load <a href="https://drive.google.com/">Google Drive</a>.</li>
			<li>Navigate to the <code>ΩF:∅ Working Group</code> folder, click the drop down arrow and select "Share...".</li>
			<li>
				<p>Under "Add people:" paste in the following:</p>
				<pre><code>"<span class="flow data-name">Full Name</span>" &lt;<span class="flow data-email">their+email@gmail.com</span>&gt;</code></pre>
			</li>
			<li>Click "Share &amp; save".</li>
		</ol>

		<h2>Website</h2>
		
		<ol class="do">
			<li>
				<p>Open up the website index.xhtml page to edit and add the person in alphabetical order by first name in the following form:</p>
				<pre><code>&lt;li class="<span class="flow data-nick">{nick}</span>"&gt;&lt;a title="<span class="flow data-nick">{nick}</span>" href="<span class="flow data-url">{url}</span>"&gt;<span class="flow data-name">{name}</span>&lt;/a&gt; (<span class="flow data-nick">{nick}</span>)&lt;/li&gt;</code></pre>
			</li>
			<li>
				<p>Add user's gravar image to avatars.css:</p>
				<pre><code>.<span class="flow data-nick">nick</span> { list-style-image: url(<span class="flow data-avatar">https://secure.gravatar.com/avatar/?s=18&amp;d=mm</span>); }</code></pre>
			</li>
			<li>Push to oftn.org git repository</li>
		</ol>

		<h2>Freenode</h2>

		<ol class="do">
			<li>In IRC, do <pre><code>/msg #freenode-gab Can I get oftn/member/<span class="flow data-nick">{nick}</span> for <span class="flow data-irc">{nick}</span> please?</code></pre></li>
		</ol>

		</div>

		<div class="say">
			<p>All finished. Please go to http://wg.oftn.org/ and verify that your name and website link have no mistakes.</p>
			<p>Congratulations you are now an honorary member of the <span class="oftn"><span class="oftn-strong">ΩF:∅</span> Working Group</span>!</p>
		</div>

	</div>

<script type="text/javascript">
/*<![CDATA[*/
var jsonp = [];

function DOMFlow(root, filter) {
	this.root = root;

	var flows = this.root.getElementsByClassName("flow");
	for (var i = 0, len = flows.length; i < len; i++) {
		var flow = flows[i];
		flow.setAttribute("data-flow-default", flow.innerText || flow.textContent);
	}

	this.flows = flows;
	this.filter = filter;
}

DOMFlow.prototype.update = function(data) {
	if (typeof data !== "object") {
		return;
	}

	for (var key in data) {
		if (data.hasOwnProperty(key)) {
			this.setFlow (key, this.filter ? this.filter(data[key], key, data) : data[key]);
		}
	}
};

DOMFlow.prototype.setFlow = function(key, value) {
	var flows = this.root.getElementsByClassName("data-"+key);
	for (var i = 0, len = flows.length; i < len; i++) {
		var flow = flows[i];
		while (flow.lastChild) {
			flow.removeChild(flow.lastChild);
		}
		if (value) {
			flow.appendChild(document.createTextNode(value));
		} else {
			flow.appendChild(document.createTextNode(flow.getAttribute("data-flow-default")));
		}
	}
};


var flow = new DOMFlow(document.body, function(value, key, data) {
	if (key === "url" && !value) {
		value = data["github"] ? "https://github.com/" + data["github"] : null;
	}
	return value;
});
var input = document.getElementById("input");
input.addEventListener("keyup", update);

function update() {
	var data = {name: null, nick: null, irc: null, github: null, url: null, email: null}, val = this.value;
	try {
		data = JSON.parse(val);
		set_error(null);
	} catch (e) {
		set_error(e);
	}

	gravatar(data.github, function(img) {
		data.avatar = img;
		flow.update(data);
	});
}

function set_error(e) {
	var element = document.getElementById("error");
	if (e) {
		element.style.display = "block";
		while (element.lastChild) {
			element.removeChild(element.lastChild);
		}
		element.appendChild(document.createTextNode(e));
	} else {
		element.style.display = "none";
	}
}

var gravatarcache = {};
var defaultavatar = "https://secure.gravatar.com/avatar/?s=18&d=mm";
function gravatar(username, callback) {
	if (gravatarcache[username]) {
		callback(gravatarcache[username]);
	} else {
		if (typeof console !== "undefined") { console.log("Fetching avatar for " + username); }
		github("/users/"+username, function(data) {
			var result = data.avatar_url;
			if (result) {
				result = result.replace(/\?d=.*$/g, "?s=18&d=mm");
			} else {
				result = defaultavatar;
			}

			gravatarcache[username] = result;
			callback(result);
		});
	}
}

function github(res, callback) {
	var id = jsonp.length;
	jsonp.push(function(data) { callback(data.data); });
	var callident = "jsonp["+id+"]";
	var script = document.createElement("script");
	script.type = "text/javascript";
	script.src = "https://api.github.com" + res + "?callback=" + encodeURIComponent(callident);
	document.body.appendChild(script);
}
/*]]>*/
</script>

</body>
</html>
